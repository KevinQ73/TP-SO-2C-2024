==415675== Memcheck, a memory error detector
==415675== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==415675== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==415675== Command: ./bin/kernel RECURSOS_MUTEX_PROC 32 ./files/race_condition.config
==415675== Parent PID: 408752
==415675== 
==415675== Thread 2:
==415675== Invalid read of size 4
==415675==    at 0x10AC58: create_tcb (utils-kernel.c:40)
==415675==    by 0x10E843: syscall_thread_create (kernel.c:1108)
==415675==    by 0x10E40C: operacion_a_atender (kernel.c:1009)
==415675==    by 0x10BB75: planificador_corto_plazo (kernel.c:266)
==415675==    by 0x4909AC2: start_thread (pthread_create.c:442)
==415675==    by 0x499AA03: clone (clone.S:100)
==415675==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==415675== 
==415675== 
==415675== Process terminating with default action of signal 11 (SIGSEGV)
==415675==  Access not within mapped region at address 0x4
==415675==    at 0x10AC58: create_tcb (utils-kernel.c:40)
==415675==    by 0x10E843: syscall_thread_create (kernel.c:1108)
==415675==    by 0x10E40C: operacion_a_atender (kernel.c:1009)
==415675==    by 0x10BB75: planificador_corto_plazo (kernel.c:266)
==415675==    by 0x4909AC2: start_thread (pthread_create.c:442)
==415675==    by 0x499AA03: clone (clone.S:100)
==415675==  If you believe this happened as a result of a stack
==415675==  overflow in your program's main thread (unlikely but
==415675==  possible), you can try to increase the size of the
==415675==  main thread stack using the --main-stacksize= flag.
==415675==  The main thread stack size used in this run was 8388608.
==415675== 
==415675== HEAP SUMMARY:
==415675==     in use at exit: 12,665 bytes in 124 blocks
==415675==   total heap usage: 2,936 allocs, 2,812 frees, 118,954 bytes allocated
==415675== 
==415675== Thread 1:
==415675== 140 (48 direct, 92 indirect) bytes in 1 blocks are definitely lost in loss record 73 of 85
==415675==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==415675==    by 0x10ABC6: create_pcb (utils-kernel.c:24)
==415675==    by 0x10E5E1: syscall_process_create (kernel.c:1068)
==415675==    by 0x10E3E3: operacion_a_atender (kernel.c:1001)
==415675==    by 0x10BB75: planificador_corto_plazo (kernel.c:266)
==415675==    by 0x4909AC2: start_thread (pthread_create.c:442)
==415675==    by 0x499AA03: clone (clone.S:100)
==415675== 
==415675== 272 bytes in 1 blocks are possibly lost in loss record 77 of 85
==415675==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==415675==    by 0x40147D9: calloc (rtld-malloc.h:44)
==415675==    by 0x40147D9: allocate_dtv (dl-tls.c:375)
==415675==    by 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
==415675==    by 0x490A7B4: allocate_stack (allocatestack.c:430)
==415675==    by 0x490A7B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
==415675==    by 0x10B492: iniciar_planificacion (kernel.c:112)
==415675==    by 0x10B039: main (kernel.c:33)
==415675== 
==415675== 272 bytes in 1 blocks are possibly lost in loss record 78 of 85
==415675==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==415675==    by 0x40147D9: calloc (rtld-malloc.h:44)
==415675==    by 0x40147D9: allocate_dtv (dl-tls.c:375)
==415675==    by 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
==415675==    by 0x490A7B4: allocate_stack (allocatestack.c:430)
==415675==    by 0x490A7B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
==415675==    by 0x10B4C4: iniciar_planificacion (kernel.c:115)
==415675==    by 0x10B039: main (kernel.c:33)
==415675== 
==415675== 272 bytes in 1 blocks are possibly lost in loss record 79 of 85
==415675==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==415675==    by 0x40147D9: calloc (rtld-malloc.h:44)
==415675==    by 0x40147D9: allocate_dtv (dl-tls.c:375)
==415675==    by 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
==415675==    by 0x490A7B4: allocate_stack (allocatestack.c:430)
==415675==    by 0x490A7B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
==415675==    by 0x10BB45: planificador_corto_plazo (kernel.c:260)
==415675==    by 0x4909AC2: start_thread (pthread_create.c:442)
==415675==    by 0x499AA03: clone (clone.S:100)
==415675== 
==415675== LEAK SUMMARY:
==415675==    definitely lost: 48 bytes in 1 blocks
==415675==    indirectly lost: 92 bytes in 6 blocks
==415675==      possibly lost: 816 bytes in 3 blocks
==415675==    still reachable: 11,709 bytes in 114 blocks
==415675==         suppressed: 0 bytes in 0 blocks
==415675== Reachable blocks (those to which a pointer was found) are not shown.
==415675== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==415675== 
==415675== For lists of detected and suppressed errors, rerun with: -s
==415675== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
