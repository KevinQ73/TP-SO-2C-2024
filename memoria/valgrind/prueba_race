==9900== Memcheck, a memory error detector
==9900== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9900== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==9900== Command: ./bin/memoria ./files/race_condition.config
==9900== Parent PID: 7911
==9900== 
==9900== Thread 4:
==9900== Conditional jump or move depends on uninitialised value(s)
==9900==    at 0x10CF7A: obtener_espacio_desocupado (memoria.c:721)
==9900==    by 0x10CCEF: hay_particion_disponible (memoria.c:643)
==9900==    by 0x10B7E9: crear_proceso (memoria.c:230)
==9900==    by 0x10B39E: atender_solicitudes_kernel (memoria.c:138)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  Uninitialised value was created by a stack allocation
==9900==    at 0x49060F3: __futex_abstimed_wait_common64 (futex-internal.c:57)
==9900==    by 0x49060F3: __futex_abstimed_wait_common (futex-internal.c:87)
==9900==    by 0x49060F3: __futex_abstimed_wait_cancelable64 (futex-internal.c:139)
==9900== 
==9900== Thread 2:
==9900== Invalid read of size 2
==9900==    at 0x484FF6F: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x10C896: escribir_en_memoria (memoria.c:570)
==9900==    by 0x10BBB2: atender_cpu (memoria.c:322)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  Address 0x4aa95a8 is 0 bytes after a block of size 24 alloc'd
==9900==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x486B5E5: dictionary_create (dictionary.c:38)
==9900==    by 0x10AF30: iniciar_memoria (memoria.c:53)
==9900==    by 0x10ADAA: main (memoria.c:17)
==9900== 
==9900== Invalid read of size 2
==9900==    at 0x484FF60: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x10C896: escribir_en_memoria (memoria.c:570)
==9900==    by 0x10BBB2: atender_cpu (memoria.c:322)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  Address 0x4aa95aa is 2 bytes after a block of size 24 alloc'd
==9900==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x486B5E5: dictionary_create (dictionary.c:38)
==9900==    by 0x10AF30: iniciar_memoria (memoria.c:53)
==9900==    by 0x10ADAA: main (memoria.c:17)
==9900== 
==9900== Invalid read of size 1
==9900==    at 0x484FF9D: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x10C896: escribir_en_memoria (memoria.c:570)
==9900==    by 0x10BBB2: atender_cpu (memoria.c:322)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  Address 0x4aa95a8 is 0 bytes after a block of size 24 alloc'd
==9900==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x486B5E5: dictionary_create (dictionary.c:38)
==9900==    by 0x10AF30: iniciar_memoria (memoria.c:53)
==9900==    by 0x10ADAA: main (memoria.c:17)
==9900== 
==9900== Invalid read of size 1
==9900==    at 0x484FF90: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x10C896: escribir_en_memoria (memoria.c:570)
==9900==    by 0x10BBB2: atender_cpu (memoria.c:322)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  Address 0x4aa95a9 is 1 bytes after a block of size 24 alloc'd
==9900==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x486B5E5: dictionary_create (dictionary.c:38)
==9900==    by 0x10AF30: iniciar_memoria (memoria.c:53)
==9900==    by 0x10ADAA: main (memoria.c:17)
==9900== 
==9900== Invalid read of size 8
==9900==    at 0x10DFE6: serializar_paquete (serializacion.c:249)
==9900==    by 0x10E050: enviar_paquete (serializacion.c:258)
==9900==    by 0x10C9C7: enviar_datos_memoria (memoria.c:596)
==9900==    by 0x10BDEF: atender_cpu (memoria.c:368)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  Address 0x4bf07e8 is 4 bytes after a block of size 4 alloc'd
==9900==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x10C838: leer_de_memoria (memoria.c:562)
==9900==    by 0x10BDE2: atender_cpu (memoria.c:368)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900== 
==9900== Invalid read of size 8
==9900==    at 0x484FEA5: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x10E004: serializar_paquete (serializacion.c:249)
==9900==    by 0x10E050: enviar_paquete (serializacion.c:258)
==9900==    by 0x10C9C7: enviar_datos_memoria (memoria.c:596)
==9900==    by 0x10BDEF: atender_cpu (memoria.c:368)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==9900== 
==9900== 
==9900== Process terminating with default action of signal 11 (SIGSEGV)
==9900==  Access not within mapped region at address 0x0
==9900==    at 0x484FEA5: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x10E004: serializar_paquete (serializacion.c:249)
==9900==    by 0x10E050: enviar_paquete (serializacion.c:258)
==9900==    by 0x10C9C7: enviar_datos_memoria (memoria.c:596)
==9900==    by 0x10BDEF: atender_cpu (memoria.c:368)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900==  If you believe this happened as a result of a stack
==9900==  overflow in your program's main thread (unlikely but
==9900==  possible), you can try to increase the size of the
==9900==  main thread stack using the --main-stacksize= flag.
==9900==  The main thread stack size used in this run was 8388608.
==9900== 
==9900== HEAP SUMMARY:
==9900==     in use at exit: 78,303,371 bytes in 379 blocks
==9900==   total heap usage: 12,554 allocs, 12,175 frees, 78,740,159 bytes allocated
==9900== 
==9900== Thread 1:
==9900== 10 bytes in 10 blocks are definitely lost in loss record 11 of 53
==9900==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x491D58E: strdup (strdup.c:42)
==9900==    by 0x486E5FD: string_duplicate (string.c:43)
==9900==    by 0x486E719: string_new (string.c:60)
==9900==    by 0x10B320: atender_solicitudes_kernel (memoria.c:126)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900== 
==9900== 33 bytes in 33 blocks are definitely lost in loss record 30 of 53
==9900==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x491D58E: strdup (strdup.c:42)
==9900==    by 0x486E5FD: string_duplicate (string.c:43)
==9900==    by 0x486E719: string_new (string.c:60)
==9900==    by 0x10C8F9: buscar_instruccion (memoria.c:577)
==9900==    by 0x10BC33: atender_cpu (memoria.c:334)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900== 
==9900== 272 bytes in 1 blocks are possibly lost in loss record 41 of 53
==9900==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x40147D9: calloc (rtld-malloc.h:44)
==9900==    by 0x40147D9: allocate_dtv (dl-tls.c:375)
==9900==    by 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
==9900==    by 0x490A7B4: allocate_stack (allocatestack.c:430)
==9900==    by 0x490A7B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
==9900==    by 0x10B191: atender_solicitudes (memoria.c:87)
==9900==    by 0x10AE7F: main (memoria.c:32)
==9900== 
==9900== 272 bytes in 1 blocks are possibly lost in loss record 42 of 53
==9900==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x40147D9: calloc (rtld-malloc.h:44)
==9900==    by 0x40147D9: allocate_dtv (dl-tls.c:375)
==9900==    by 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
==9900==    by 0x490A7B4: allocate_stack (allocatestack.c:430)
==9900==    by 0x490A7B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
==9900==    by 0x10B1C3: atender_solicitudes (memoria.c:90)
==9900==    by 0x10AE7F: main (memoria.c:32)
==9900== 
==9900== 544 bytes in 2 blocks are possibly lost in loss record 45 of 53
==9900==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==9900==    by 0x40147D9: calloc (rtld-malloc.h:44)
==9900==    by 0x40147D9: allocate_dtv (dl-tls.c:375)
==9900==    by 0x40147D9: _dl_allocate_tls (dl-tls.c:634)
==9900==    by 0x490A7B4: allocate_stack (allocatestack.c:430)
==9900==    by 0x490A7B4: pthread_create@@GLIBC_2.34 (pthread_create.c:647)
==9900==    by 0x10B2C0: atender_kernel (memoria.c:115)
==9900==    by 0x4909AC2: start_thread (pthread_create.c:442)
==9900==    by 0x499AA03: clone (clone.S:100)
==9900== 
==9900== LEAK SUMMARY:
==9900==    definitely lost: 43 bytes in 43 blocks
==9900==    indirectly lost: 0 bytes in 0 blocks
==9900==      possibly lost: 1,088 bytes in 4 blocks
==9900==    still reachable: 78,302,240 bytes in 332 blocks
==9900==         suppressed: 0 bytes in 0 blocks
==9900== Reachable blocks (those to which a pointer was found) are not shown.
==9900== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==9900== 
==9900== For lists of detected and suppressed errors, rerun with: -s
==9900== ERROR SUMMARY: 359 errors from 12 contexts (suppressed: 0 from 0)
